@model ACP.Business.Models.RootBookingEntityModel

@{
    ViewBag.Title = "Edit Airport";
    Layout = "~/Views/Shared/_ActionLayout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.AddressId)
    @Html.HiddenFor(model => model.StatusId)
    @Html.HiddenFor(model => model.Address.Id)
    @Html.HiddenFor(model => model.Address.Modified)
    @Html.HiddenFor(model => model.Address.Created)
    @Html.HiddenFor(model => model.Address.CreatedBy)
    @Html.HiddenFor(model => model.Address.ModifiedBy)


    @Html.HiddenFor(model => model.Status.Id)
    @Html.HiddenFor(model => model.Status.Modified)
    @Html.HiddenFor(model => model.Status.Created)
    @Html.HiddenFor(model => model.Status.CreatedBy)
    @Html.HiddenFor(model => model.Status.ModifiedBy)

    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.Modified)
    @Html.HiddenFor(model => model.ModifiedBy)
    <div class="container">
        <div class="form">
            <div class="well">
                <div class="row">
                    <div class="col-md-6 ">
                        <h2><span class="fa fa-1x fa-fw text-success -o fa-plane"></span>Add Airport</h2>
                    </div>
                </div>
            </div>
            <div class="well">
                <div class="row">
                    <div class="col-sm-1">
                        <h3><span class="glyphicon glyphicon-plane"></span></h3>
                    </div>               
                    <div class="col-sm-2">
                        <h3>Airport Details</h3>
                    </div> 
                    
                </div>
                <div class="row">
                    @Html.HiddenFor(model => model.Id)
                    <div class="col-md-6 ">
                        @Html.Label("Airport Name", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Airport Name" } })
                            @Html.ValidationMessageFor(model => model.Name, "Please enter the Airport Name.", new { @class = "text-danger" })                           
                        </div>
                        
                        @Html.Label("Airport Code", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", placeholder = "Airport Code" } })
                            @Html.ValidationMessageFor(model => model.Code, "Please insert the international airport code", new { @class = "text-danger" })
                        </div>
                        <p>Airport International code.</p>
                        @Html.Label("Airport Status", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            <select class="form-control" id="Status.StatusType" name="Status.StatusType" required>
                                @{ 
                                    if (Model.Status.StatusType == ACP.Business.Enums.StatusType.Active)
                                    {
                                      <option selected value="@ACP.Business.Enums.StatusType.Active">Active</option>
                                      <option  value="@ACP.Business.Enums.StatusType.Inactive">Inactive</option>
                                    }
                                    else
                                    {
                                        <option  value="@ACP.Business.Enums.StatusType.Active">Active</option>
                                        <option selected value="@ACP.Business.Enums.StatusType.Inactive">Inactive</option>
                                    }
                                }                                                                
                            </select>       
                        </div>
                        
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Phone Number has-error", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", placeholder = "0044772372732" } })
                            @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                            <p>Airport phone number.</p>
                        </div>
                                               
                        @Html.Label("Website", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                            <p>Website of the airport</p>
                        </div>                       
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 ">
                        <h3><span class="glyphicon glyphicon-envelope"></span>Address:</h3>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-6 ">
                        @Html.Label("Number", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Number, new { htmlAttributes = new { @class = "form-control", placeholder = "Number" } })
                            @Html.ValidationMessageFor(model => model.Address.Number, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the Number of the house.</p>
                        </div>
                        @Html.Label("Address Line 1", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Address1, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                            @Html.ValidationMessageFor(model => model.Address.Address1, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the first line of the address.</p>
                        </div>
                        @Html.Label("City", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                            @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the city.</p>
                        </div>
                        @Html.Label("Country", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Country" } })
                            @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the country.</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Address Line 2", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Address2, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                            @Html.ValidationMessageFor(model => model.Address.Address2, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the second line of the Address.</p>
                        </div>
                        @Html.Label("County", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.County, new { htmlAttributes = new { @class = "form-control", placeholder = "County" } })
                            @Html.ValidationMessageFor(model => model.Address.County, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the county.</p>
                        </div>
                        @Html.Label("Postcode", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Postcode, new { htmlAttributes = new { @class = "form-control", placeholder = "Postcode" } })
                            @Html.ValidationMessageFor(model => model.Address.Postcode, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the postcode.</p>
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
                        <button class="btn btn-warning" type="submit">Clear Fields</button>
                        <button class="btn btn-primary" type="submit">Update</button>
                    </div>

                </div>
            </div>
        </div>
    </div>

}

