@model ACP.Business.Models.SlotModel

@{
    ViewBag.Title = "Availability";
    Layout = "~/Views/Shared/_ActionLayout.cshtml";
}

 <!-- Modal -->
<div class="modal fade" id="doyouwanttoremove" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Availability Times</h4>
            </div>
            <div class="modal-body">
                <p>Do you want to remove this time for the slot?</p>
            </div>
            <div class="modal-footer">
                <button id="yesremove" type="button" class="btn btn-default" data-dismiss="modal">Yes</button>
                <button type="button" class="btn btn-default" data-="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="couldntbeadded" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Availability Times</h4>
            </div>
            <div class="modal-body">
                <p>The time for the slot could not be added.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Yes</button>             
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="couldntberemoved" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Availability Times</h4>
            </div>
            <div class="modal-body">
                <p>The time for the slot could not be removed.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Yes</button>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">        
            <div class="row">
                <div class="col-md-4">

                    <h3 class="text-success"><i class="fa fa-fw fa-calendar"></i>Availability</h3>
                </div>
                </div>
            <div class="row">
                
                <div class="col-md-10">
                    <form class="form-inline">
                        <div class="form-group">
                            <label class="sr-only" for="exampleInputAmount">Start Date</label>
                            <div class="input-group">
                                <div class="input-group-addon">Start Date</div>
                                <input class="form-control text-box single-line" id="StartDate" name="StartDate" type="date" value="">
                                <div class="input-group-addon">End Date</div>
                                <input class="form-control text-box single-line" id="EndDate" name="EndDate" type="date" value="">
                            </div>
                        </div>
                        <button id="addevents" type="button" class="btn btn-default">Add Availability</button>
                    </form>
                </div>
            </div>        
    </div>
    <div class="section">
        <div id="calendar" class="fc fc-ltr fc-unthemed">
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<link href="~/Content/fullcalendar.css" rel="stylesheet">
<link href="~/Content/fullcalendar.print.css" rel="stylesheet" media="print">
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/fullcalendar.min.js"></script>
<script>

	$(document).ready(function() {

	    var idtoberemoved;
	    var calendardates = @Html.Raw(Json.Encode(Model.Availability));
	    var events = [];
	    
	    for (var i=0; i<calendardates.length;i++)
	    {
	        var event = {
	            title:calendardates[i].Status===201?"Free":"Occupied",
	            id:calendardates[i].Id,
	            start: calendardates[i].StartDate,
	            end:calendardates[i].EndDate,	            
	            color: calendardates[i].Status===201?"green":"red"
	        };

	        events.push(event);
	    }

	    $('#yesremove').click(function ()
	    {	        
	        $.ajax({
	            url: '/SlotAdmin/RemoveAvailability/'+idtoberemoved,
	            type: 'DELETE',	            
	            dataType: 'json',
	            contentType: 'application/json; charset=utf-8',
	            error: function (xhr) {
	                alert('Error: ' + xhr.statusText);
	            },
	            success: function (result) {
	                if (result)
	                {
	                    $('#calendar').fullCalendar('removeEvents', idtoberemoved);
	                }
	                else
	                {
	                    $('#couldntberemoved').modal('show');
	                }
	                
	            },
	            async: true,
	            processData: false
	        });
	    });
	    
		$('#calendar').fullCalendar({
			header: {
				left: 'prev,next today',
				center: 'title',
				right: 'month,agendaWeek,agendaDay'
			},
			defaultDate: new Date(),
			editable: true,
			eventLimit: true, // allow "more" link when too many events
			events: events,
			eventClick: function (calEvent, jsEvent, view) {
			    $('#doyouwanttoremove').modal('show');			    			    
			    idtoberemoved = calEvent._id;		   
			}
		});
		
		$("#addevents").click(function () {

		    var slotid = @Model.Id;
		    var availability =
                {
                    StartDate: $("#StartDate").val(),
                    EndDate: $("#EndDate").val(),
                    Status:201,
                    SlotId:slotid
                };

		    $.ajax({
		        url: '/SlotAdmin/AddAvailability',
		        type: 'POST',
		        data: JSON.stringify(availability),
		        dataType: 'json',
		        contentType: 'application/json; charset=utf-8',
		        error: function (xhr) {
		            $('#couldntbeadded').modal('show');
		        },
		        success: function (result) {
		            if (result.Id>0)
		            {
		                var newevent = {
		                    title:result.Status===201?"Free":"Occupied",
		                    id:result.Id,
		                    start: result.StartDate,
		                    end:result.EndDate,	            
		                    color: result.Status===201?"green":"red"
		                };

		                $('#calendar').fullCalendar('renderEvent', newevent);
		            }
		            else
		            {
		                $('#couldntbeadded').modal('show');
		            }
		        },
		        async: true,
		        processData: false
		    });
		});
	});

</script>
<style>
    body {
        margin: 40px 10px;
        padding: 0;
        font-family: "Lucida Grande",Helvetica,Arial,Verdana,sans-serif;
        font-size: 14px;
    }

    #calendar {
        max-width: 900px;
        margin: 0 auto;
    }
</style>

