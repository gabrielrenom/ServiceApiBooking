@model ACP.Business.Models.UserModel

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_ActionLayout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="form">
            <div class="well">
                <div class="row">
                    <div class="col-md-6 ">
                        <h2><span class="fa fa-1x fa-fw text-success -o fa-User"></span>User Registration</h2>
                    </div>
                </div>
            </div>
            <div class="well">
                <div class="row">
                    <div class="col-md-4 ">
                        <h3><span class="glyphicon glyphicon-user"></span>Personal Details:</h3>
                    </div>
                </div>
                <div class="row">
                    @Html.HiddenFor(model=>model.Id)
                    <div class="col-md-6 ">
                        @Html.Label("First Name", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group has-error">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter your first name.</p>
                        </div>
                       
                        @Html.Label("Password", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group has-error">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "confirm password", tabindex = 4 })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter a password of more than 8 characters.</p>
                        </div>
                        @Html.Label("Date of Birth", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @*@Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", placeholder = "Date Of Birth" } })*@
                            <input class="form-control text-box single-line" type="date" name="DOB" id="DOB" value="@if (Model != null) {@(((DateTime)Model.DOB).ToString("yyyy-MM-dd")) }" />
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter your date of birth.</p>
                        </div>
                        @Html.Label("Phone Number has-error", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "0044772372732" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter your phone number.</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Last Name", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group has-error">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter your Last Name.</p>
                        </div>                    
                        @Html.Label("Repeat Password", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group has-error">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "confirm password", tabindex = 4 })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter a password of more than 8 characters.</p>
                        </div>
                        @Html.Label("Email", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group has-error">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter your email.</p>
                        </div>
                        @Html.Label("Gender", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.Label("Male", htmlAttributes: new { @class = "" })
                            @Html.RadioButtonFor(m => m.Gender, 0)
                            @Html.Label("Female", htmlAttributes: new { @class = "" })
                            @Html.RadioButtonFor(m => m.Gender, 1)
                            <p class="help-block">Select the gender please.</p>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 ">
                        <h3><span class="glyphicon glyphicon-envelope"></span>Address:</h3>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-6 ">
                        @Html.Label("Number", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Number, new { htmlAttributes = new { @class = "form-control", placeholder = "Number" } })
                            @Html.ValidationMessageFor(model => model.Address.Number, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the Number of the house.</p>
                        </div>
                        @Html.Label("Address Line 1", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Address1, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                            @Html.ValidationMessageFor(model => model.Address.Address1, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the first line of the address.</p>
                        </div>
                        @Html.Label("City", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                            @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the city.</p>
                        </div>
                        @Html.Label("Country", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Country" } })
                            @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the country.</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Address Line 2", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Address2, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                            @Html.ValidationMessageFor(model => model.Address.Address2, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the second line of the Address.</p>
                        </div>
                        @Html.Label("County", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.County, new { htmlAttributes = new { @class = "form-control", placeholder = "County" } })
                            @Html.ValidationMessageFor(model => model.Address.County, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the county.</p>
                        </div>
                        @Html.Label("Postcode", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address.Postcode, new { htmlAttributes = new { @class = "form-control", placeholder = "Postcode" } })
                            @Html.ValidationMessageFor(model => model.Address.Postcode, "", new { @class = "text-danger" })
                            <p class="help-block">Please enter the postcode.</p>
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">                        
                        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
                        <button class="btn btn-warning" type="submit">Clear Fields</button>
                        <button class="btn btn-primary" type="submit">Update</button>
                    </div>

                </div>
            </div>
        </div>
    </div>

}
