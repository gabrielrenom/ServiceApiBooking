@model ACP.Business.Models.UserModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_ActionLayout.cshtml";
}

<h2>User Registration</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="container">
        <div class="form">
            <div class="row">
                <h4>Personal Details:</h4>
                <div class="col-md-6 ">
                    @Html.Label("First Name", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group has-error">                        
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </fieldset>
                    @Html.LabelFor(model => model.Address.Country, htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group">                        
                        @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                    </fieldset>
                    @Html.Label("Password", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group has-error">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </fieldset>
                    @Html.Label("Date of Birth", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group">                        
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </fieldset>                    
                </div>
                <div class="col-md-6">
                    @Html.Label("Last Name", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group has-error">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </fieldset>                    
                    @Html.Label("Email", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group has-error">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </fieldset>
                    @Html.Label("Repeat Password", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group has-error">                        
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </fieldset>
                    @Html.Label("Gender", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group">
                        @Html.Label("Male", htmlAttributes: new { @class = "" })
                        @Html.RadioButtonFor(m => m.Gender, 0)
                        @Html.Label("Female", htmlAttributes: new { @class = "" })
                        @Html.RadioButtonFor(m => m.Gender, 1)

                    </fieldset>
                </div>
            </div>
            <div class="row">
                <h4>Address:</h4>
                <div class="col-md-6 ">
                    @Html.Label("Number", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group">                       
                        @Html.EditorFor(model => model.Address.Number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Number, "", new { @class = "text-danger" })
                    </fieldset> 
                    @Html.Label("Address Line 1", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group">                        
                        @Html.EditorFor(model => model.Address.Address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Address1, "", new { @class = "text-danger" })
                    </fieldset>                  
                    @Html.Label("City", htmlAttributes: new { @class = "control-label" })  
                    <fieldset class="form-group">                        
                        @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                    </fieldset>                  
                    @Html.Label("Country", htmlAttributes: new { @class = "control-label" })  
                    <fieldset class="form-group">                        
                        @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                    </fieldset> 
                </div>
                <div class="col-md-6">
                    @Html.Label("Address Line 2", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group">                        
                        @Html.EditorFor(model => model.Address.Address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Address2, "", new { @class = "text-danger" })
                    </fieldset>                  
                    @Html.Label("County", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group">                        
                        @Html.EditorFor(model => model.Address.County, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.County, "", new { @class = "text-danger" })
                    </fieldset>                  
                    @Html.Label("Postcode", htmlAttributes: new { @class = "control-label" })
                    <fieldset class="form-group">                        
                        @Html.EditorFor(model => model.Address.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Postcode, "", new { @class = "text-danger" })
                    </fieldset>                  
                                     
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <button class="btn btn-secondary" type="submit">Back</button>
                    <button class="btn btn-warning" type="submit">Clear Fields</button>
                    <button class="btn btn-primary" type="submit">Submit</button>
                </div>
                
            </div>
        </div>
    </div>
    @*<div class="form-horizontal">
        <h4>UserModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modified, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
